$date
	Wed Sep  4 20:52:16 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 1 ! cout $end
$var wire 1 " s0 $end
$var reg 3 # i1 [2:0] $end
$var reg 3 $ y [2:0] $end
$var reg 3 % y0 [2:0] $end
$var integer 32 & i [31:0] $end
$var integer 32 ' j [31:0] $end
$scope module circuit4_0 $end
$var wire 1 ! cout $end
$var wire 3 ( i [2:0] $end
$var wire 1 ) s $end
$var wire 1 " s0 $end
$var wire 3 * y [2:0] $end
$var wire 3 + y0 [2:0] $end
$var wire 1 , yout $end
$var wire 1 - c $end
$scope module M1 $end
$var wire 3 . i [2:0] $end
$var wire 1 ) s0 $end
$var wire 1 / t1 $end
$var wire 1 0 t2 $end
$var wire 1 1 t3 $end
$var wire 1 - c0 $end
$scope module a1 $end
$var wire 1 0 i0 $end
$var wire 1 2 i1 $end
$var wire 1 3 o $end
$upscope $end
$scope module a2 $end
$var wire 1 / i1 $end
$var wire 1 4 o $end
$var wire 1 1 i0 $end
$upscope $end
$scope module o1 $end
$var wire 1 0 i1 $end
$var wire 1 1 o $end
$var wire 1 - i0 $end
$upscope $end
$scope module x1 $end
$var wire 1 / i0 $end
$var wire 1 5 i1 $end
$var wire 1 6 o $end
$upscope $end
$scope module x2 $end
$var wire 1 ) i0 $end
$var wire 1 / i1 $end
$var wire 1 7 o $end
$upscope $end
$upscope $end
$scope module M2 $end
$var wire 1 , out $end
$var wire 1 ) s0 $end
$var wire 1 8 w1 $end
$var wire 1 9 y $end
$var wire 1 - c0 $end
$scope module a3 $end
$var wire 1 , i0 $end
$var wire 1 8 i1 $end
$var wire 1 ) i2 $end
$var wire 1 : t $end
$var wire 1 - o $end
$scope module and2_0 $end
$var wire 1 , i0 $end
$var wire 1 8 i1 $end
$var wire 1 : o $end
$upscope $end
$scope module and2_1 $end
$var wire 1 ) i0 $end
$var wire 1 : i1 $end
$var wire 1 - o $end
$upscope $end
$upscope $end
$scope module n1 $end
$var wire 1 8 i $end
$var wire 1 9 o $end
$upscope $end
$upscope $end
$scope module M3 $end
$var wire 1 ! c $end
$var wire 1 " s $end
$var wire 1 ; y1 $end
$var wire 1 , y2 $end
$scope module G1 $end
$var wire 1 " i0 $end
$var wire 1 ; i1 $end
$var wire 1 , o $end
$upscope $end
$scope module G2 $end
$var wire 1 ! i0 $end
$var wire 1 ; i1 $end
$var wire 1 , o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0;
x:
z9
z8
x7
x6
05
x4
03
02
x1
z0
z/
bx0 .
x-
x,
b0 +
b0 *
z)
bx0 (
b0 '
b0 &
b0 %
b0 $
b0 #
z"
z!
$end
#10
b1 '
#20
1;
b10 '
b1 %
b1 +
#30
0;
b1 *
b11 '
b0 %
b0 +
b1 $
#40
1;
b1 &
b0 '
b1 %
b1 +
#50
x3
0;
b0 *
15
12
b1 '
b0 %
b0 +
b0 $
bx1 (
bx1 .
b1 #
#60
1;
b10 '
b1 %
b1 +
#70
0;
b1 *
b11 '
b0 %
b0 +
b1 $
#80
1;
b10 &
b0 '
b1 %
b1 +
#90
03
0;
b0 *
05
02
b1 '
b0 %
b0 +
b0 $
bx0 (
bx0 .
b10 #
#100
1;
b10 '
b1 %
b1 +
#110
0;
b1 *
b11 '
b0 %
b0 +
b1 $
#120
1;
b11 &
b0 '
b1 %
b1 +
#130
x3
0;
b0 *
15
12
b1 '
b0 %
b0 +
b0 $
bx1 (
bx1 .
b11 #
#140
1;
b10 '
b1 %
b1 +
#150
0;
b1 *
b11 '
b0 %
b0 +
b1 $
#160
1;
b100 &
b0 '
b1 %
b1 +
#170
03
0;
b0 *
05
02
b1 '
b0 %
b0 +
b0 $
bx0 (
bx0 .
b100 #
#180
1;
b10 '
b1 %
b1 +
#190
0;
b1 *
b11 '
b0 %
b0 +
b1 $
#200
1;
b101 &
b0 '
b1 %
b1 +
#210
x3
0;
b0 *
15
12
b1 '
b0 %
b0 +
b0 $
bx1 (
bx1 .
b101 #
#220
1;
b10 '
b1 %
b1 +
#230
0;
b1 *
b11 '
b0 %
b0 +
b1 $
#240
1;
b110 &
b100 '
b1 %
b1 +
